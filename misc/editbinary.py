#!/usr/bin/python3

import re
import sys


def edit(filename, direction):
	f = open(filename, "rb")
	buf = bytearray() + f.read()
	print(len(buf))

	# we use 900 as a special value to replace 100 in ".Spotlight-V100"
	oldbin = b'\x31\x00\x30\x00\x30\x00'
	newbin = b'\x39\x00\x30\x00\x30\x00'
	if direction != "forward":
		tmp = oldbin
		oldbin = newbin
		newbin = tmp

	hits = 0
	for i in re.finditer(oldbin, buf):
		start, end = i.span()
		print("Found at", start, end, buf[start:end])
		hits += 1
		if end-start != len(oldbin):
			raise RuntimeError("Size found doesn't match size needed!")
		buf[start:end] = newbin
		print("Replaced with", start, end, buf[start:end])

	if hits != 2:
		raise RuntimeError("Hits has to be 2!")

	f = open(filename, "wb")
	f.write(buf)
	f.flush()
	f.close()


filename = sys.argv[1]
direction = sys.argv[2]
if direction not in ["forward", "backward"]:
	print("Direction should either be forward or backward")
	exit(1)
print("Editing for direction", direction)
edit(filename, direction)

